# log4Rich Demo Configuration
# Use this file as a template for your own log4Rich configuration
# Copy to 'log4Rich.config' or use with -Dlog4rich.config=log4Rich.demo.config

# =============================================================================
# BASIC CONFIGURATION
# =============================================================================

# Root logger level - controls default logging level for all loggers
# Values: TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
log4rich.rootLevel=INFO

# =============================================================================
# CONSOLE LOGGING CONFIGURATION
# =============================================================================

# Enable/disable console logging
log4rich.console.enabled=true

# Console target: STDOUT or STDERR
log4rich.console.target=STDOUT

# Console log level (optional - defaults to root level)
log4rich.console.level=INFO

# Console message pattern
log4rich.console.pattern=[%level] %date{yyyy-MM-dd HH:mm:ss} [%thread] %class.%method:%line - %message%n

# =============================================================================
# FILE LOGGING CONFIGURATION
# =============================================================================

# Enable/disable file logging
log4rich.file.enabled=true

# Log file path
log4rich.file.path=logs/application.log

# File log level (optional - defaults to root level)
log4rich.file.level=DEBUG

# File message pattern (more detailed than console)
log4rich.file.pattern=[%level] %date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %class.%method:%line - %message%n

# File rolling configuration
log4rich.file.maxSize=10M
log4rich.file.maxBackups=10
log4rich.file.datePattern=yyyy-MM-dd-HH-mm-ss

# File I/O settings
log4rich.file.encoding=UTF-8
log4rich.file.bufferSize=8192
log4rich.file.immediateFlush=true

# =============================================================================
# COMPRESSION CONFIGURATION
# =============================================================================

# Enable compression of rolled files
log4rich.file.compress=true

# Compression program (gzip, bzip2, xz, zip, 7z, or custom)
log4rich.file.compress.program=gzip

# Additional compression arguments
log4rich.file.compress.args=

# =============================================================================
# PERFORMANCE CONFIGURATION (NEW IN v1.1.0)
# =============================================================================

# Memory-mapped file I/O (5.4x faster) - Recommended for low-latency applications
log4rich.performance.memoryMapped=false
log4rich.performance.mappedSize=64M
log4rich.performance.forceOnWrite=false
log4rich.performance.forceInterval=1000

# Batch processing (23x faster multi-threaded) - Recommended for high-throughput applications
log4rich.performance.batchEnabled=false
log4rich.performance.batchSize=1000
log4rich.performance.batchTimeMs=100

# Zero-allocation logging - Recommended for GC-sensitive applications
log4rich.performance.zeroAllocation=false
log4rich.performance.stringBuilderCapacity=1024

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================

# Location information capture (class, method, line number)
# Disable in production for better performance
log4rich.location.capture=true

# Thread synchronization timeout
log4rich.thread.lockTimeout=5000

# Logger name formatting
log4rich.truncateLoggerNames=false
log4rich.maxLoggerNameLength=30
log4rich.class.format=SIMPLE

# =============================================================================
# LOGGER-SPECIFIC CONFIGURATION
# =============================================================================

# Set specific levels for different packages/classes
# Format: log4rich.logger.{logger.name}={LEVEL}

# Example: Set all database operations to DEBUG
log4rich.logger.com.myapp.dao=DEBUG

# Example: Set security components to WARN (less verbose)
log4rich.logger.com.myapp.security=WARN

# Example: Set performance-critical components to ERROR only
log4rich.logger.com.myapp.performance=ERROR

# Example: Enable detailed logging for specific service
log4rich.logger.com.myapp.service.UserService=TRACE

# =============================================================================
# PRODUCTION CONFIGURATION EXAMPLES
# =============================================================================

# High-Performance Production Setup:
# log4rich.rootLevel=WARN
# log4rich.location.capture=false
# log4rich.performance.batchEnabled=true
# log4rich.performance.batchSize=2000
# log4rich.file.immediateFlush=false

# Low-Latency Production Setup:
# log4rich.rootLevel=ERROR
# log4rich.location.capture=false
# log4rich.performance.memoryMapped=true
# log4rich.performance.mappedSize=128M

# Development Setup:
# log4rich.rootLevel=DEBUG
# log4rich.console.enabled=true
# log4rich.file.enabled=true
# log4rich.location.capture=true

# =============================================================================
# CONFIGURATION SEARCH ORDER
# =============================================================================
# log4Rich searches for configuration files in this order:
# 1. System Property: -Dlog4rich.config=/path/to/config
# 2. Classpath: log4Rich.config (root of classpath)
# 3. Current Directory: ./log4Rich.config
# 4. Parent Directory: ../log4Rich.config
# 5. Config Directories:
#    - ./config/log4Rich.config
#    - ./conf/log4Rich.config
#    - ../config/log4Rich.config
#    - ../conf/log4Rich.config